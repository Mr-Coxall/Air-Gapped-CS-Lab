version: "3.9"
services:
  coder:
    # This MUST be stable for our documentation and
    # other automations.
    image: ghcr.io/coder/coder:${CODER_VERSION:-latest}
    # restart automatically
    restart: unless-stopped
    ports:
      - "7081:7081"
    environment:
      CODER_PG_CONNECTION_URL: "postgresql://${POSTGRES_USER:-username}:${POSTGRES_PASSWORD:-password}@database/${POSTGRES_DB:-coder}?sslmode=disable"
      CODER_HTTP_ADDRESS: "0.0.0.0:7081"
      # You'll need to set CODER_ACCESS_URL to an IP or domain
      # that workspaces can reach. This cannot be localhost
      # or 127.0.0.1 for non-Docker templates!
      # CODER_ACCESS_URL: "${CODER_ACCESS_URL}"
      CODER_ACCESS_URL: "http://10.100.204.20:7081"
      #CODER_ACCESS_URL: "https://coder-icd2o-1-teh.type-code.cloud"
      # allow admin to open all user containers
      CODER_DANGEROUS_ALLOW_PATH_APP_SITE_OWNER_ACCESS: true
      # to disable GitHub login
      CODER_OAUTH2_GITHUB_DEFAULT_PROVIDER_ENABLE=false
      # for GitHub Auth
      #CODER_OAUTH2_GITHUB_ALLOW_SIGNUPS: true
      #CODER_OAUTH2_GITHUB_ALLOWED_ORGS: "MTHS-ICD2O-1-2024"
      #CODER_OAUTH2_GITHUB_CLIENT_ID: "Ov23li0ypKI49RYLsYuT"
      #CODER_OAUTH2_GITHUB_CLIENT_SECRET: "5012647c85ff77194cfb31c3c3099cfbef62b681"
    # If the coder user does not have write permissions on
    # the docker socket, you can uncomment the following
    # lines and set the group ID to one that has write
    # permissions on the docker socket.
    group_add:
      - "996" # docker group on host on Proxmox, running LXC docker & portainer community script
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      database:
        condition: service_healthy
  database:
    # Minimum supported version is 13.
    # More versions here: https://hub.docker.com/_/postgres
    image: "postgres:16"
    # restart automatically
    restart: unless-stopped
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-username} # The PostgreSQL user (useful to connect to the database)
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password} # The PostgreSQL password (useful to connect to the database)
      POSTGRES_DB: ${POSTGRES_DB:-coder} # The PostgreSQL default database (automatically created at first launch)
    volumes:
      - coder_data:/var/lib/postgresql/data # Use "docker volume rm coder_coder_data" to reset Coder
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-username} -d ${POSTGRES_DB:-coder}",
        ]
      interval: 5s
      timeout: 5s
      retries: 5
volumes:
  coder_data:
